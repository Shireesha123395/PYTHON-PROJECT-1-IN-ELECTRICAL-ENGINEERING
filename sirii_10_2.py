# -*- coding: utf-8 -*-
"""SIRII-10-2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1unx3b12mjrGXktHp7tW_wDCVUtjYUDNq
"""

class A:
 def sum(self,a,b):
   return a+b
 def sub(self,a,b):
   return a-b
 def mul(self,a,b):
  return a*b
 def div(self,a,b):
  return a/b
if __name__=="__main__":
  obj=A()
  print(obj.sum(10,20))
  print(obj.sub(10,20))
  print(obj.mul(10,20))

class A:
  def  employe (self,name,age,salary):
    self.name=name
    self.age=age
    self.salary=salary
    obj=A("john",25,50000)
    print(obj.name("john"))
    print(obj.age(25))
    print(obj.salary(50000))

class A:
  def display(self,name,age):
    print(name,age)
class B(A):
  def display(self,name,age):
    print(name,age)
obj1=A()
obj2=B()
obj1.display("john",25)
obj.displ

class A:
  def display(self,name,age):
    print(name,age)
class B(A):
  def display(self,name,age):
    print(name,age)
class c:
  def display(self,name,age):
    print(name,age)
obj1=A()
obj2=B()
obj3=c()
obj1.display("banu",25)
print("------------")
obj2.display("john",25)
print("-----------")
obj3.display("siri",18)

num=int(input("enter a number"))
if num%1==0:
  print(" isprime number")
else:
  print("is not number")

import calendar
year = 2030 # Example year
month = 2   # Example month
generated_calendar = calendar.month(year, month)
print(generated_calendar)

class Car:
    def __init__(self, brand, color):
        self.brand = brand
        self.color = color

    def drive(self):
        print(f"The {self.color} {self.brand} is driving.")

# Create an object (instance) of Car
my_car = Car("Toyota", "Red")
my_car.drive()

class bike:
  def __init__(self,name,color):
    self.brand = name
    self.color = color

  def drive(self):
    print(f"The {self.brand} {self.color} is driving.")
my_bike = bike("honda","red")
my_bike.drive()

class calender:
    def __init__(self,year,month):
        self.year=year
        self.month=month

    def get_days_in_month(self):
        print(f"the {self.year} {self.month} is running.")

my_calender=calender(2025,12)
my_calender.get_days_in_month()

